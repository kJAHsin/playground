@layer resets {
	*,
	*::before,
	*::after {
		box-sizing: inherit;
		margin: 0;
		padding: 0;
	}

	.body {
		box-sizing: border-box;
		min-height: 100dvh;
		position: relative;
	}

	a {
		text-decoration: none;
	}

	button,
	[type="submit"] {
		cursor: pointer;
		font-weight: 600;
	}

	ul,
	li {
		list-style: none;
	}
}

@layer variables {
	#root {
		--clr-dark-bg: rgb(35, 7, 35);
		--clr-accent: rgb(138, 244, 100);
		--clr-light: rgb(223, 223, 223);

		--border-rad: calc(7px + 0.25em);

		--font-fam: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI",
			Roboto, Oxygen, Ubuntu, sans-serif;
	}
}

@layer layout {
	.body {
		grid-template-columns: repeat(auto-fill, 1fr);
		background-color: var(--clr-dark-bg);
		padding-block: 1px 6rem;
		color: var(--clr-light);
		font-family: var(--font-fam);
	}

	input[type="submit"] {
		padding: 1rem 3rem;
		font-size: 1.75rem;
		font-weight: 600;
		text-transform: capitalize;
		border-radius: var(--border-rad);
	}
}

@layer logo {
	.logo {
		width: 8rem;
		aspect-ratio: 1;
		margin: calc(1rem + 2vw) auto;
		color: rgb(203, 129, 110);
		animation: pulseLogo 4000ms alternate infinite linear;

		svg {
			width: 100%;
			height: 100%;
		}
	}
}

@layer todo {
	.container,
	.list,
	.sort-btns {
		--border-width: clamp(1px, 1vw, 2px);
		--width: clamp(280px, 50dvw, 450px);
		--padding: 1.125rem;

		display: flex;
		flex-direction: column;
		border: var(--border-width) solid var(--clr-light);
		padding: 1rem var(--padding);
		border-radius: var(--border-rad);
		width: var(--width);
		max-width: calc(100% - var(--border-width) * 3);
	}

	.container {
		margin: 0 auto 1rem;
		position: relative;

		h2 {
			color: var(--clr-accent);
			margin-block: 0.25rem 1rem;
			text-wrap: pretty;

			@media (max-width: 725px) {
				margin-block-start: 1.75rem;
			}
		}

		.clear-btn {
			position: absolute;
			inset: var(--padding) var(--padding) auto auto;
			padding: 0.5rem 2rem;
			border-radius: var(--border-rad);
			border: var(--border-width) solid var(--clr-dark-bg);

			&:hover,
			&:focus-visible {
				border-color: var(--clr-light);
			}

			&:active {
				border-color: var(--clr-accent);
				background-color: var(--clr-dark-bg);
				color: var(--clr-light);
			}
		}

		form {
			display: grid;
			gap: 0.75rem;
			text-align: center;
			padding-block-start: 0.75rem;

			&.invalid [type="submit"] {
				cursor: not-allowed;
				user-select: none;
			}

			input {
				background-color: var(--clr-light);
				border: var(--border-width) solid var(--clr-light);
				font-size: calc(0.75rem + 1vw);
				line-height: 1.75;
				border-radius: var(--border-rad);
				padding: 0.125rem 0.75rem;
				max-width: 100%;
				outline: 2px solid transparent;
				transition: 300ms ease-in;

				&::placeholder {
					font-size: 0.75em;
				}

				&:focus-visible {
					border-color: var(--clr-accent);
					box-shadow: inset 2px 2px 1px var(--clr-light),
						inset 2px -2px 1px var(--clr-light),
						inset -2px 2px 1px var(--clr-light),
						inset -2px -2px 1px var(--clr-light),
						inset 2px 4px rgb(from var(--clr-dark-bg) r g b / 0.35),
						inset 2px -4px rgb(from var(--clr-dark-bg) r g b / 0.35),
						inset -2px 4px rgb(from var(--clr-dark-bg) r g b / 0.35),
						inset -2px -4px
							rgb(from var(--clr-dark-bg) r g b / 0.35),
						inset 6px 0px 4px 2px
							rgb(from var(--clr-dark-bg) r g b / 0.1),
						inset 6px -0px 4px 2px rgb(from var(--clr-dark-bg) r g b /
									0.1),
						inset -6px 0px 4px 2px rgb(from var(--clr-dark-bg) r g b /
									0.1),
						inset -6px -0px 4px 2px
							rgb(from var(--clr-dark-bg) r g b / 0.1);
					outline-color: rgb(from var(--clr-accent) r g b / 0.7);
					outline-offset: 0.125rem;
				}

				&:hover {
					border-color: var(--clr-dark-bg);
					outline-color: var(--clr-light);

					&::placeholder {
						transition: color 2200ms ease-in-out;
						color: transparent;
					}
				}

				&:last-of-type:active {
					background-color: var(--clr-dark-bg);
					color: var(--clr-light);
					border-color: var(--clr-accent);
				}
			}
		}
	}

	.sort-btns {
		margin: 1rem auto;
		display: flex;
		flex-direction: row;
		align-items: flex-end;
		gap: 0.75rem;

		span {
			margin-inline-end: auto;
			color: var(--clr-accent);
			font-weight: 700;
			font-size: calc(0.625rem + 1vw);
		}

		button {
			padding: 0.5rem 2rem;
			border-radius: var(--border-rad);
			border: var(--border-width) solid var(--clr-dark-bg);

			&:hover,
			&:focus-visible {
				border-color: var(--clr-light);
			}

			&:active {
				border-color: var(--clr-accent);
				background-color: var(--clr-dark-bg);
				color: var(--clr-light);
			}
		}
	}

	.list {
		margin: 1rem auto auto;

		&:empty {
			border-color: transparent;
		}

		> * + * {
			margin-block-start: 0.75rem;
		}

		li {
			display: flex;
			justify-content: space-between;
			align-items: baseline;
			font-size: calc(0.75rem + 1vw);
			line-height: 1.75;
			padding: 0.125rem 0.75rem;
			background-color: var(--clr-light);
			color: var(--clr-dark-bg);
			border-radius: var(--border-rad);
			border: var(--border-width) solid var(--clr-dark-bg);

			&:hover {
				border-color: var(--clr-accent);
			}

			span:first-child {
				white-space: nowrap;
				text-overflow: ellipsis;
				overflow: clip;
				width: 40%;
				transition: all 1s ease-out;
			}

			&:hover span:first-child,
			&:focus span:first-child,
			&:focus-within span:first-child {
				white-space: wrap;
				width: unset;
				font-size: 0.75em;
				padding-inline-end: 0.25rem;
				text-wrap: balance;
			}

			span:not(:first-child) {
				font-size: 0.75em;
			}
		}
	}
}

@layer reduced-motion {
	@media (prefers-reduced-motion) {
		*,
		*::before,
		*::after {
			animation: none !important;
		}
	}
}

@layer animations {
	@keyframes pulseLogo {
		to {
			color: transparent;
		}
	}
}
