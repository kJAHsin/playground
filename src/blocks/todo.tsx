import { useEffect, useState, FormEvent } from "react";
import Todo from "../classes/todo-item.tsx";

export default function Block() {
	const [todos, setTodos] = useState<Array<string | Todo | any>>([]);
	const [isValid, setIsValid] = useState(false);

	function addListItem(e: FormEvent<HTMLFormElement>) {
		e.preventDefault();

		const form: HTMLFormElement | null = document.querySelector("form");
		const inputs: NodeListOf<HTMLInputElement> = document.querySelectorAll(
			'form > input:not([type="submit"])'
		);
		const itemName = form?.todo.value;
		const fullDate = form?.date.value;

		if (!itemName || !fullDate) return;
		const dateObj = new Date(fullDate);
		const weekday = dateObj.toLocaleDateString("en-US", {
			weekday: "long",
		});
		const date = dateObj.getDate();
		const month = dateObj.toLocaleDateString("en-US", { month: "long" });
		const year = dateObj.getFullYear();

		const todoItem = new Todo(itemName, weekday, date, month, year);
		setTodos([...todos, todoItem]);

		inputs.forEach((i) => (i.value = ""));
	}

	function checkValidity() {
		const form = document.querySelector("form");

		!(form?.todo.value && form?.date.value)
			? setIsValid(false)
			: setIsValid(true);
	}

	useEffect(() => {
		const itemList: HTMLElement | null = document.querySelector(".list");
		if (itemList) {
			itemList.innerHTML = "";
			if (todos.length === 0) return;
			for (let i = 0; i < todos.length; i++) {
				todos[i].addListItem();
			}
		}
	}, [todos]);

	useEffect(() => {
		const form = document.querySelector("form");
		isValid
			? form?.classList.remove("invalid")
			: form?.classList.add("invalid");
	}, [isValid]);

	return (
		<>
			<div className="logo">
				<svg
					width="32"
					height="32"
					viewBox="0 0 32 32"
					fill="none"
					xmlns="http://www.w3.org/2000/svg"
					aria-hidden="true"
					role="img"
					preserveAspectRatio="xMidYMid meet"
				>
					<g clip-path="url(#clip0_43_2)">
						<rect
							width="32"
							height="32"
							rx="6"
							fill="currentColor"
							fill-opacity="0.59"
							stroke="white"
						/>
						<circle
							cx="27.5"
							cy="22.5"
							r="2"
							fill="currentColor"
							stroke="#BA6F5B"
						/>
						<path
							d="M4.47067 14.5092C4.16018 14.6377 3.86032 14.7011 3.57109 14.6995C3.27983 14.693 3.024 14.6257 2.80362 14.4975C2.5812 14.3644 2.41164 14.1777 2.29493 13.9374L2.98984 13.65C3.09313 13.8439 3.25505 13.9703 3.47562 14.0291C3.70111 14.0859 3.95185 14.0572 4.22785 13.9431C4.48413 13.8371 4.66275 13.6968 4.76372 13.5223C4.86469 13.3478 4.87951 13.1743 4.80816 13.0018C4.73478 12.8244 4.60191 12.7264 4.40955 12.7078C4.21515 12.6844 3.93552 12.699 3.57066 12.7518C3.23741 12.7973 2.95838 12.8203 2.73355 12.821C2.51162 12.8147 2.29904 12.7612 2.09582 12.6605C1.89548 12.5529 1.7413 12.3685 1.63327 12.1073C1.54766 11.9003 1.53078 11.6851 1.58265 11.4617C1.63452 11.2382 1.75342 11.0303 1.93937 10.838C2.12327 10.6407 2.36061 10.4819 2.65139 10.3617C3.09987 10.1762 3.509 10.1397 3.87875 10.2523C4.24851 10.3648 4.52478 10.6142 4.70756 11.0003L4.03483 11.2785C3.9324 11.0727 3.77583 10.9384 3.56512 10.8755C3.35934 10.8105 3.12585 10.8321 2.86464 10.9401C2.62315 11.04 2.45234 11.1712 2.35222 11.3338C2.2521 11.4964 2.23669 11.6615 2.306 11.8291C2.36103 11.9622 2.44879 12.0557 2.56926 12.1098C2.69263 12.1569 2.82959 12.181 2.98015 12.1822C3.1336 12.1765 3.3394 12.1578 3.59753 12.126C3.92092 12.0846 4.1901 12.0656 4.40507 12.0691C4.618 12.0676 4.82012 12.1167 5.01145 12.2165C5.20771 12.3142 5.35926 12.4853 5.46611 12.7297C5.55784 12.9515 5.57878 13.1765 5.52895 13.4049C5.47912 13.6333 5.36226 13.8461 5.17836 14.0434C4.99734 14.2337 4.76145 14.389 4.47067 14.5092ZM9.13351 12.5028L6.80416 11.3712L7.54408 13.1602L6.87135 13.4384L4.60877 7.96785L5.2815 7.68961L6.61153 10.9054L7.4284 8.46386L8.36727 8.07555L7.29467 10.8826L10.0502 12.1237L9.13351 12.5028ZM9.07577 7.01203C8.94763 7.06503 8.82086 7.06551 8.69546 7.01349C8.57005 6.96147 8.48085 6.87139 8.42786 6.74325C8.37486 6.61511 8.37437 6.48834 8.42639 6.36294C8.47841 6.23754 8.56849 6.14834 8.69663 6.09534C8.81984 6.04438 8.94169 6.04593 9.06216 6.09999C9.18756 6.15201 9.27676 6.24209 9.32976 6.37023C9.38276 6.49837 9.38325 6.62514 9.33122 6.75054C9.28413 6.87391 9.19898 6.96107 9.07577 7.01203ZM9.67317 7.53544L11.3487 11.5866L10.676 11.8649L9.00044 7.81368L9.67317 7.53544ZM12.763 6.17094C13.2558 5.96711 13.7172 5.95232 14.1471 6.12657C14.575 6.2959 14.9051 6.66149 15.1375 7.22333L16.1251 9.61116L15.4597 9.88634L14.5119 7.59461C14.3447 7.19048 14.1163 6.92424 13.8266 6.79589C13.5348 6.66261 13.214 6.66833 12.8641 6.81306C12.5092 6.95982 12.2717 7.18792 12.1515 7.49735C12.0362 7.80474 12.0663 8.17035 12.2416 8.5942L13.168 10.8342L12.4953 11.1124L10.8197 7.06124L11.4925 6.783L11.7309 7.35963C11.7784 7.0976 11.892 6.86302 12.0719 6.6559C12.2566 6.44675 12.487 6.28509 12.763 6.17094ZM17.4917 4.21519C17.9845 4.01135 18.4459 3.99656 18.8758 4.17082C19.3037 4.34014 19.6338 4.70573 19.8662 5.26757L20.8538 7.6554L20.1884 7.93058L19.2406 5.63886C19.0734 5.23472 18.845 4.96848 18.5553 4.84013C18.2635 4.70685 17.9427 4.71258 17.5928 4.8573C17.2379 5.00406 17.0004 5.23216 16.8802 5.54159C16.7649 5.84898 16.795 6.2146 16.9703 6.63844L17.8967 8.87842L17.224 9.15666L15.5484 5.10548L16.2212 4.82724L16.4596 5.40387C16.5071 5.14184 16.6207 4.90727 16.8006 4.70015C16.9853 4.49099 17.2157 4.32934 17.4917 4.21519ZM23.7665 1.70656L23.7913 8.67403L23.0964 8.96144L23.0876 6.67957L19.7966 3.34846L20.5433 3.03965L23.1724 5.79609L23.0716 1.99397L23.7665 1.70656Z"
							fill="#FF6363"
							fill-opacity="0.31"
						/>
						<path
							d="M11.2266 11.5859H18V21.6758L25.5352 11.5859H28.9219L23.3672 19.0625L30.6445 29.0117H23.0156L19.125 23.5391L18 25.0859V29H11.2266V11.5859Z"
							fill="#963BF2"
						/>
						<path
							d="M11.2266 11.5859V11.0859H10.7266V11.5859H11.2266ZM18 11.5859H18.5V11.0859H18V11.5859ZM18 21.6758H17.5V23.1809L18.4006 21.975L18 21.6758ZM25.5352 11.5859V11.0859H25.2845L25.1345 11.2868L25.5352 11.5859ZM28.9219 11.5859L29.3232 11.8841L29.9162 11.0859H28.9219V11.5859ZM23.3672 19.0625L22.9658 18.7643L22.746 19.0602L22.9636 19.3577L23.3672 19.0625ZM30.6445 29.0117V29.5117H31.6297L31.0481 28.7165L30.6445 29.0117ZM23.0156 29.0117L22.6081 29.3014L22.7576 29.5117H23.0156V29.0117ZM19.125 23.5391L19.5325 23.2494L19.1296 22.6826L18.7206 23.245L19.125 23.5391ZM18 25.0859L17.5956 24.7919L17.5 24.9233V25.0859H18ZM18 29V29.5H18.5V29H18ZM11.2266 29H10.7266V29.5H11.2266V29ZM11.2266 12.0859H18V11.0859H11.2266V12.0859ZM17.5 11.5859V21.6758H18.5V11.5859H17.5ZM18.4006 21.975L25.9358 11.8851L25.1345 11.2868L17.5994 21.3766L18.4006 21.975ZM25.5352 12.0859H28.9219V11.0859H25.5352V12.0859ZM28.5205 11.2878L22.9658 18.7643L23.7685 19.3607L29.3232 11.8841L28.5205 11.2878ZM22.9636 19.3577L30.241 29.3069L31.0481 28.7165L23.7708 18.7673L22.9636 19.3577ZM30.6445 28.5117H23.0156V29.5117H30.6445V28.5117ZM23.4231 28.722L19.5325 23.2494L18.7175 23.8288L22.6081 29.3014L23.4231 28.722ZM18.7206 23.245L17.5956 24.7919L18.4044 25.38L19.5294 23.8331L18.7206 23.245ZM17.5 25.0859V29H18.5V25.0859H17.5ZM18 28.5H11.2266V29.5H18V28.5ZM11.7266 29V11.5859H10.7266V29H11.7266Z"
							fill="black"
						/>
						<path
							d="M4.47067 13.5301C4.16018 13.6585 3.86032 13.7219 3.57109 13.7203C3.27983 13.7138 3.024 13.6465 2.80362 13.5183C2.5812 13.3852 2.41164 13.1985 2.29493 12.9582L2.98984 12.6708C3.09313 12.8647 3.25505 12.9911 3.47562 13.0499C3.70111 13.1067 3.95185 13.0781 4.22785 12.9639C4.48413 12.8579 4.66275 12.7177 4.76372 12.5432C4.86469 12.3686 4.87951 12.1951 4.80816 12.0227C4.73478 11.8452 4.60191 11.7472 4.40955 11.7287C4.21515 11.7052 3.93552 11.7199 3.57066 11.7726C3.23741 11.8181 2.95838 11.8412 2.73355 11.8418C2.51162 11.8355 2.29904 11.782 2.09582 11.6814C1.89548 11.5738 1.7413 11.3894 1.63327 11.1282C1.54766 10.9212 1.53078 10.706 1.58265 10.4825C1.63452 10.259 1.75342 10.0511 1.93937 9.85882C2.12327 9.66155 2.36061 9.50279 2.65139 9.38253C3.09987 9.19704 3.509 9.16057 3.87875 9.27313C4.24851 9.38569 4.52478 9.63503 4.70756 10.0212L4.03483 10.2994C3.9324 10.0936 3.77583 9.95922 3.56512 9.89631C3.35934 9.83136 3.12585 9.8529 2.86464 9.96093C2.62315 10.0608 2.45234 10.1921 2.35222 10.3547C2.2521 10.5173 2.23669 10.6824 2.306 10.8499C2.36103 10.983 2.44879 11.0766 2.56926 11.1306C2.69263 11.1777 2.82959 11.2019 2.98015 11.2031C3.1336 11.1973 3.3394 11.1786 3.59753 11.1469C3.92092 11.1055 4.1901 11.0865 4.40507 11.0899C4.618 11.0884 4.82012 11.1376 5.01145 11.2373C5.20771 11.3351 5.35926 11.5061 5.46611 11.7505C5.55784 11.9723 5.57878 12.1974 5.52895 12.4258C5.47912 12.6542 5.36226 12.867 5.17836 13.0642C4.99734 13.2545 4.76145 13.4098 4.47067 13.5301ZM9.13351 11.5237L6.80416 10.392L7.54408 12.181L6.87135 12.4593L4.60877 6.9887L5.2815 6.71046L6.61153 9.92626L7.4284 7.48471L8.36727 7.0964L7.29467 9.90344L10.0502 11.1445L9.13351 11.5237ZM9.07577 6.03287C8.94763 6.08587 8.82086 6.08636 8.69546 6.03434C8.57005 5.98231 8.48085 5.89223 8.42786 5.76409C8.37486 5.63596 8.37437 5.50918 8.42639 5.38378C8.47841 5.25838 8.56849 5.16918 8.69663 5.11618C8.81984 5.06522 8.94169 5.06677 9.06216 5.12083C9.18756 5.17285 9.27676 5.26293 9.32976 5.39107C9.38276 5.51921 9.38325 5.64598 9.33122 5.77139C9.28413 5.89475 9.19898 5.98191 9.07577 6.03287ZM9.67317 6.55629L11.3487 10.6075L10.676 10.8857L9.00044 6.83452L9.67317 6.55629ZM12.763 5.19179C13.2558 4.98795 13.7172 4.97316 14.1471 5.14742C14.575 5.31674 14.9051 5.68233 15.1375 6.24417L16.1251 8.632L15.4597 8.90718L14.5119 6.61546C14.3447 6.21132 14.1163 5.94508 13.8266 5.81673C13.5348 5.68345 13.214 5.68918 12.8641 5.8339C12.5092 5.98066 12.2717 6.20876 12.1515 6.51819C12.0362 6.82558 12.0663 7.1912 12.2416 7.61504L13.168 9.85502L12.4953 10.1333L10.8197 6.08208L11.4925 5.80384L11.7309 6.38047C11.7784 6.11844 11.892 5.88386 12.0719 5.67675C12.2566 5.46759 12.487 5.30594 12.763 5.19179ZM17.4917 3.23603C17.9845 3.03219 18.4459 3.0174 18.8758 3.19166C19.3037 3.36099 19.6338 3.72657 19.8662 4.28842L20.8538 6.67624L20.1884 6.95142L19.2406 4.6597C19.0734 4.25557 18.845 3.98933 18.5553 3.86098C18.2635 3.7277 17.9427 3.73342 17.5928 3.87814C17.2379 4.02491 17.0004 4.253 16.8802 4.56243C16.7649 4.86982 16.795 5.23544 16.9703 5.65929L17.8967 7.89926L17.224 8.1775L15.5484 4.12632L16.2212 3.84809L16.4596 4.42471C16.5071 4.16268 16.6207 3.92811 16.8006 3.72099C16.9853 3.51183 17.2157 3.35018 17.4917 3.23603ZM23.7665 0.727404L23.7913 7.69488L23.0964 7.98229L23.0876 5.70041L19.7966 2.36931L20.5433 2.0605L23.1724 4.81694L23.0716 1.01481L23.7665 0.727404Z"
							fill="#92F0EA"
						/>
						<circle
							cx="5"
							cy="22"
							r="3.5"
							fill="currentColor"
							stroke="#BA6F5B"
						/>
						<circle
							cx="8.5"
							cy="15.5"
							r="1"
							fill="currentColor"
							stroke="#BA6F5B"
						/>
						<circle
							cx="21.5"
							cy="11.5"
							r="1"
							fill="currentColor"
							stroke="#BA6F5B"
						/>
						<circle
							cx="27.5"
							cy="3.5"
							r="2"
							fill="currentColor"
							stroke="#BA6F5B"
						/>
					</g>
					<defs>
						<clipPath id="clip0_43_2">
							<rect width="32" height="32" rx="6" fill="white" />
						</clipPath>
					</defs>
				</svg>
			</div>
			<div className="container">
				<h2>You&apos;ve got stuff to do:</h2>
				<button
					className="clear-btn"
					onClick={() => {
						setTodos([]);
					}}
				>
					clear list
				</button>
				<form onSubmit={addListItem}>
					<input
						type="text"
						name="todo"
						id="todoEl"
						aria-label="enter an item"
						placeholder="Enter your todo"
						onChange={() => checkValidity()}
					/>
					<input
						type="date"
						name="date"
						id="dateEl"
						aria-label="enter the date"
						onChange={() => checkValidity()}
					/>
					<input
						type="submit"
						value="Add to list"
						title="add new item to list"
						aria-label="add new item to list"
					/>
				</form>
			</div>
			<div className="sort-btns">
				<span>Sort Todos by:</span>
				<button>a-z</button>
				<button>date</button>
			</div>
			<ul className="list"></ul>
		</>
	);
}
